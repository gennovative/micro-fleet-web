{"version":3,"sources":["app/filters/AuthorizeFilter.ts"],"names":[],"mappings":";AAAA,2BAA2B;AAC3B,gCAAgC;;;;;;;;;;;AAIhC,+DAA0D;AAE1D;;GAEG;AAEH,IAAa,eAAe,GAA5B;IAEC;IAGA,CAAC;IAEM,YAAY,CAAC,GAAoB,EAAE,GAAqB,EAAE,IAAc;QAC9E,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;QACD,8BAA8B;QAC9B,qCAAqC;QACrC,WAAW;QACX,IAAI,EAAE,CAAC;IACR,CAAC;CACD,CAAA;AAhBY,eAAe;IAD3B,iCAAU,EAAE;;GACA,eAAe,CAgB3B;AAhBY,0CAAe","file":"AuthorizeFilter.js","sourcesContent":["// Handle validation errors\r\n// Handle server internal errors\r\n\r\nimport * as express from 'express';\r\n\r\nimport { injectable, inject } from 'back-lib-common-util';\r\n\r\n/**\r\n * Provides method to look up tenant ID from tenant slug.\r\n */\r\n@injectable()\r\nexport class AuthorizeFilter {\r\n\r\n\tconstructor(\r\n\t\t// @inject() private logProvider: ILogProvider\r\n\t) {\r\n\t}\r\n\r\n\tpublic authenticate(req: express.Request, res: express.Response, next: Function): any {\r\n\t\tif (!req.header('Authorization')) {\r\n\t\t\treturn res.status(401).send();\r\n\t\t}\r\n\t\t// Decode token to get user ID\r\n\t\t// Look up user role based on user ID\r\n\t\t// Check if\r\n\t\tnext();\r\n\t}\r\n}"]}