{"version":3,"sources":["app/TrailsServerAddOn.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,oCAAqC;AACrC,+DAAiG;AACjG,mCAAqC;AAIrC,IAAa,iBAAiB,GAA9B;IAKC,YACc,YAAkC,EAClC,UAAkC;QAE/C,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC;QACzC,YAAY,CAAC,YAAY,CAAC,aAAC,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAGD,IAAW,MAAM;QAChB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAED;;OAEG;IACI,IAAI;QACV,MAAM,CAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;aAC9B,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACI,UAAU;QAChB,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACI,OAAO;QACb,MAAM,CAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;CACD,CAAA;AAvCY,iBAAiB;IAD7B,iCAAU,EAAE;IAOV,WAAA,gCAAS,EAAE,CAAA;IACX,WAAA,gCAAS,EAAE,CAAA;;GAPD,iBAAiB,CAuC7B;AAvCY,8CAAiB","file":"TrailsServerAddOn.js","sourcesContent":["import TrailsApp = require('trails');\r\nimport { injectable, unmanaged, IDependencyContainer, Types as CmT } from 'back-lib-common-util';\r\nimport { Types as T } from './Types';\r\n\r\n\r\n@injectable()\r\nexport class TrailsServerAddOn implements IServiceAddOn {\r\n\r\n\tprivate _server: TrailsApp;\r\n\r\n\r\n\tconstructor(\r\n\t\t@unmanaged() depContainer: IDependencyContainer,\r\n\t\t@unmanaged() trailsOpts: TrailsApp.TrailsAppOts\r\n\t) {\r\n\t\tthis._server = new TrailsApp(trailsOpts);\r\n\t\tdepContainer.bindConstant(T.TRAILS_APP, this._server);\r\n\t}\r\n\r\n\r\n\tpublic get server(): TrailsApp {\r\n\t\treturn this._server;\r\n\t}\r\n\r\n\t/**\r\n\t * @see IServiceAddOn.init\r\n\t */\r\n\tpublic init(): Promise<void> {\r\n\t\treturn <any>this._server.start()\r\n\t\t\t.catch(err => this._server.stop(err));\r\n\t}\r\n\r\n\t/**\r\n\t * @see IServiceAddOn.deadLetter\r\n\t */\r\n\tpublic deadLetter(): Promise<void> {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t/**\r\n\t * @see IServiceAddOn.dispose\r\n\t */\r\n\tpublic dispose(): Promise<void> {\r\n\t\treturn <any>this._server.stop();\r\n\t}\r\n}"]}