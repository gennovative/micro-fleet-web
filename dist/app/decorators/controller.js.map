{"version":3,"sources":["app/decorators/controller.ts"],"names":[],"mappings":";AAAA,0CAA0C;;AAE1C,+DAAsF;AAEtF,oDAAiD;AAOjD;;;;;GAKG;AACH,oBAA2B,aAA8B,EAAE,OAAe,EAAE;IAC3E,MAAM,CAAC,UAAU,WAAqB;QACrC,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,mBAAQ,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9D,MAAM,IAAI,wCAAiB,CAAC,gCAAgC,CAAC,CAAC;QAC/D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,4BAAK,CAAC,eAAe,CAAC,IAAI,EAAE,0CAA0C,CAAC,CAAC;QACzE,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC1B,uBAAuB;gBACvB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7C,wBAAwB;gBACxB,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;YACnB,CAAC;QACF,CAAC;QACD,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE1B,OAAO,CAAC,cAAc,CAAC,mBAAQ,CAAC,UAAU,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;QAEhF,MAAM,CAAC,WAAW,CAAC;IACpB,CAAC,CAAC;AACH,CAAC;AAzBD,gCAyBC","file":"controller.js","sourcesContent":["/// <reference types=\"reflect-metadata\" />\r\n\r\nimport { IDependencyContainer, CriticalException, Guard } from 'back-lib-common-util';\r\n\r\nimport { MetaData } from '../constants/MetaData';\r\nimport { serverContext } from '../ServerContext';\r\n\r\n\r\nexport type ControllerDecorator = (depIdentifier: symbol | string, path?: string) => Function;\r\n\r\n\r\n/**\r\n * Used to decorate REST controller class.\r\n * @param {string} depIdentifier Key to look up and resolve from dependency container.\r\n * @param {string} path Segment of URL pointing to this controller.\r\n * \t\tIf not specified, it is extract from controller class name: {path}Controller.\r\n */\r\nexport function controller(depIdentifier: symbol | string, path: string = ''): Function {\r\n\treturn function (targetClass: Function): Function {\r\n\t\tif (Reflect.hasOwnMetadata(MetaData.CONTROLLER, targetClass)) {\r\n\t\t\tthrow new CriticalException('Duplicate controller decorator');\r\n\t\t}\r\n\r\n\t\tif (path == null) {\r\n\t\t\tpath = targetClass.name.match(/(.+)Controller$/)[1];\r\n\t\t\tGuard.assertIsDefined(path, 'Cannot extract path from controller name');\r\n\t\t} else {\r\n\t\t\tif (path.startsWith('/')) {\r\n\t\t\t\t// Remove heading slash\r\n\t\t\t\tpath = path.substring(1);\r\n\t\t\t}\r\n\t\t\tif (path.length >= 1 && !path.endsWith('/')) {\r\n\t\t\t\t// Remove trailing slash\r\n\t\t\t\tpath = path + '/';\r\n\t\t\t}\r\n\t\t}\r\n\t\tpath = path.toLowerCase();\r\n\r\n\t\tReflect.defineMetadata(MetaData.CONTROLLER, [depIdentifier, path], targetClass);\r\n\r\n\t\treturn targetClass;\r\n\t};\r\n}"]}