{"version":3,"sources":["app/decorators/index.ts"],"names":[],"mappings":";;AAAA,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,OAAO,CAAC,gBAAgB,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;IACjE,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC7B,CAAC;AAED,6CAA+D;AAC/D,6CAA+D;AAC/D,qCAAmD;AAEtC,QAAA,UAAU,GAsBnB;IACH,UAAU,EAAV,uBAAU;IACV,UAAU,EAAV,uBAAU;IACV,MAAM,EAAN,eAAM;CACN,CAAC","file":"index.js","sourcesContent":["if (!Reflect || typeof Reflect['hasOwnMetadata'] !== 'function') {\r\n\trequire('reflect-metadata');\r\n}\r\n\r\nimport { lazyInject, LazyInjectDecorator } from './lazyInject';\r\nimport { controller, ControllerDecorator } from './controller';\r\nimport { action, ActionDecorator } from './action';\r\n\r\nexport const decorators: {\r\n\r\n\t/**\r\n\t * Injects value to the decorated property. \r\n\t * Used to decorate properties of a class that's cannot be resolved by dependency container.\r\n\t */\r\n\tlazyInject: LazyInjectDecorator,\r\n\r\n\t/**\r\n\t * Used to decorate REST controller class.\r\n\t * @param {string} depIdentifier Key to look up and resolve from dependency container.\r\n\t * @param {string} path Segment of URL pointing to this controller,\r\n\t * \t\tif not specified, it is extract from controller class name: {path}Controller.\r\n\t */\r\n\tcontroller: ControllerDecorator,\r\n\r\n\t/**\r\n\t * Used to decorate action function of REST controller class.\r\n\t * @param {string} path Segment of URL pointing to this controller.\r\n\t * \t\tIf not specified, it is default to be empty tring.\r\n\t */\r\n\taction: ActionDecorator\r\n} = {\r\n\tlazyInject,\r\n\tcontroller,\r\n\taction\r\n};\r\n"]}